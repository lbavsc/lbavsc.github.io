<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[manjaro是什么，我为什么使用manjar i3而不是Windows 10？]]></title>
    <url>%2F2019%2F09%2F04%2Fmanjaro%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%8E%A8%E8%8D%90manjar-i3%2F</url>
    <content type="text"><![CDATA[编写中 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189package com.example.cameraalbumtest;import android.Manifest;import android.annotation.TargetApi;import android.content.ContentUris;import android.content.Intent;import android.content.pm.PackageManager;import android.database.Cursor;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.os.Environment;import android.provider.DocumentsContract;import android.provider.MediaStore;import android.support.annotation.NonNull;import android.support.v4.app.ActivityCompat;import android.support.v4.content.ContextCompat;import android.support.v4.content.FileProvider;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.ImageView;import android.widget.Toast;import java.io.File;import java.io.FileNotFoundException;import java.io.IOException;public class MainActivity extends AppCompatActivity &#123; public static final int TAKE_PHOTO = 1; public static final int CHOOSE_PHOTO = 2; private ImageView picture; private Uri imageUri; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button takePhoto = (Button) findViewById(R.id.take_photo); Button chooseFromAlbum = (Button) findViewById(R.id.choose_from_album); picture = (ImageView) findViewById(R.id.picture); takePhoto.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; // 创建File对象，用于存储拍照后的图片 File outputImage = new File(getExternalCacheDir(), "output_image.jpg"); try &#123; if (outputImage.exists()) &#123; outputImage.delete(); &#125; outputImage.createNewFile(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; if (Build.VERSION.SDK_INT &lt; 24) &#123; imageUri = Uri.fromFile(outputImage); &#125; else &#123; imageUri = FileProvider.getUriForFile(MainActivity.this, "com.example.cameraalbumtest.fileprovider", outputImage); &#125; // 启动相机程序 Intent intent = new Intent("android.media.action.IMAGE_CAPTURE"); intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri); startActivityForResult(intent, TAKE_PHOTO); &#125; &#125;); chooseFromAlbum.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) &#123; ActivityCompat.requestPermissions(MainActivity.this, new String[]&#123; Manifest.permission. WRITE_EXTERNAL_STORAGE &#125;, 1); &#125; else &#123; openAlbum(); &#125; &#125; &#125;); &#125; private void openAlbum() &#123; Intent intent = new Intent("android.intent.action.GET_CONTENT"); intent.setType("image/*"); startActivityForResult(intent, CHOOSE_PHOTO); // 打开相册 &#125; @Override public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) &#123; switch (requestCode) &#123; case 1: if (grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) &#123; openAlbum(); &#125; else &#123; Toast.makeText(this, "You denied the permission", Toast.LENGTH_SHORT).show(); &#125; break; default: &#125; &#125; @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123; switch (requestCode) &#123; case TAKE_PHOTO: if (resultCode == RESULT_OK) &#123; try &#123; // 将拍摄的照片显示出来 Bitmap bitmap = BitmapFactory.decodeStream(getContentResolver().openInputStream(imageUri)); picture.setImageBitmap(bitmap); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; break; case CHOOSE_PHOTO: if (resultCode == RESULT_OK) &#123; // 判断手机系统版本号 if (Build.VERSION.SDK_INT &gt;= 19) &#123; // 4.4及以上系统使用这个方法处理图片 handleImageOnKitKat(data); &#125; else &#123; // 4.4以下系统使用这个方法处理图片 handleImageBeforeKitKat(data); &#125; &#125; break; default: break; &#125; &#125; @TargetApi(19) private void handleImageOnKitKat(Intent data) &#123; String imagePath = null; Uri uri = data.getData(); Log.d("TAG", "handleImageOnKitKat: uri is " + uri); if (DocumentsContract.isDocumentUri(this, uri)) &#123; // 如果是document类型的Uri，则通过document id处理 String docId = DocumentsContract.getDocumentId(uri); if("com.android.providers.media.documents".equals(uri.getAuthority())) &#123; String id = docId.split(":")[1]; // 解析出数字格式的id String selection = MediaStore.Images.Media._ID + "=" + id; imagePath = getImagePath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, selection); &#125; else if ("com.android.providers.downloads.documents".equals(uri.getAuthority())) &#123; Uri contentUri = ContentUris.withAppendedId(Uri.parse("content://downloads/public_downloads"), Long.valueOf(docId)); imagePath = getImagePath(contentUri, null); &#125; &#125; else if ("content".equalsIgnoreCase(uri.getScheme())) &#123; // 如果是content类型的Uri，则使用普通方式处理 imagePath = getImagePath(uri, null); &#125; else if ("file".equalsIgnoreCase(uri.getScheme())) &#123; // 如果是file类型的Uri，直接获取图片路径即可 imagePath = uri.getPath(); &#125; displayImage(imagePath); // 根据图片路径显示图片 &#125; private void handleImageBeforeKitKat(Intent data) &#123; Uri uri = data.getData(); String imagePath = getImagePath(uri, null); displayImage(imagePath); &#125; private String getImagePath(Uri uri, String selection) &#123; String path = null; // 通过Uri和selection来获取真实的图片路径 Cursor cursor = getContentResolver().query(uri, null, selection, null, null); if (cursor != null) &#123; if (cursor.moveToFirst()) &#123; path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA)); &#125; cursor.close(); &#125; return path; &#125; private void displayImage(String imagePath) &#123; if (imagePath != null) &#123; Bitmap bitmap = BitmapFactory.decodeFile(imagePath); picture.setImageBitmap(bitmap); &#125; else &#123; Toast.makeText(this, "failed to get image", Toast.LENGTH_SHORT).show(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>manjaro</tag>
        <tag>i3wm</tag>
      </tags>
  </entry>
</search>
